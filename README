PaginatingSelect
----------------

Use this plugin if your select has a lot of options.
The UI is a text field with a button that opens a partial
of a paginated set of radio buttons.

Requirements:
mislav-will-paginate gem
desert gem

Notes:
- You may want to consider a custom method/virtual attribute for the method parameter 
  in text_field_with_paginating_select and paginating_select_result
  for better readability

To use:
1. Install the plugin.
2. Require 'desert' in your config/environment.rb
3. Perform the following task:
   ---
    > rake paginating_select:export use='sass' 
    or use='css'
   ---
4. Include the following lines in your stylesheets and javascripts
  - paginating_select.css for 'css' stylesheet
  - paginating_select.js
5. Replace your text_field() with text_field_with_paginating_select()
   ---
    text_field_with_paginating_select(object, method, tag_options = {}, partial_options = {}, remote_options = {})
    *see plugin's app/helpers/paginating_select_helper.rb for complete parameters
   ---
6. Prepare the partial for the options. In the partial, put this function:
   ---
    paginating_select_result(collection, field, options= {}, paginating_options= {}, remote_options={}, search_options= {})
    *see plugin's app/helpers/paginating_select_helper.rb for complete parameters
   ---
7. In your controller, include this:
   ---
     if request.xml_http_request?
      render :partial => 'your_partial', :layout => false
     end
   ---
   This is needed because only the partial will be updated when 
   changing page.
   You may use multiple paginating partials in one page. Change the parameters
   as necessary, see mislav-will-paginate documentation
8. If you want to include remote_functions, provide the necessary options for
   the remote_options parameter. You will however be the one to create the
   corresponding action. params[:return] will contain the value of the selected
   option.

Example
-------
For the text field with remote and pagination options: 
 = text_field_with_paginating_select :employee, :employee_no, {}, 
    {:view => 'employee_list', :object => @employees}, 
    {:url => {:controller => 'employees', :action => 'available_employees', :additional_param => 'additional param value'}, :partial => 'div_to_update', :loading => "Element.show('loading-auto');", :loaded => "Element.hide('loading-auto');"}

For the options list in the partial(with remote and pagination options):
*at _employee_list.html.haml:
= paginating_select_result(@employees, 'employee_no_with_name', 
{:empty_text => "No Employees Found!", :object => 'employee', :method => 'employee_no'}, 
{:param_name => :emp_page, :page => params[:emp_page]}, 
{:url => {:controller => 'employees', :action => 'available_employees', :additional_param => 'additional param value', :emp_page => params[:emp_page]}, :partial => 'div_to_update', :loading => "Element.show('loading-auto');", :loaded => "Element.hide('loading-auto');"},
{:url => {:action => 'search'}, :params => {:emp_page => params[:emp_page]}}
)


Copyright (c) 2009 [name of plugin creator], released under the MIT license
